{"version":3,"file":"kadenaSignWithSeed.test.js","sourceRoot":"","sources":["../../../../src/SLIP10/tests/kadenaSignWithSeed.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,QAAQ,CAAC;AAE9C,OAAO,EACL,iBAAiB,EACjB,oBAAoB,EACpB,kBAAkB,GACnB,MAAM,aAAa,CAAC;AAErB,QAAQ,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;IACxC,MAAM,QAAQ,GAAG,UAAU,CAAC;IAC5B,MAAM,QAAQ,GAAG,iBAAiB,EAAE,CAAC;IACrC,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAC5D,MAAM,KAAK,GAAG,CAAC,CAAC;IAChB,MAAM,IAAI,GAAG,kBAAkB,CAAC;IAEhC,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,MAAM,MAAM,GAAG,kBAAkB,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACzD,MAAM,SAAS,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,MAAM,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC;QAC/B,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;IAChD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { describe, expect, it } from 'vitest';\n\nimport {\n  kadenaGenMnemonic,\n  kadenaMnemonicToSeed,\n  kadenaSignWithSeed,\n} from '../index.js';\n\ndescribe('kadenaSignWithSeed', async () => {\n  const password = 'password';\n  const mnemonic = kadenaGenMnemonic();\n  const seed = await kadenaMnemonicToSeed(password, mnemonic);\n  const index = 0;\n  const hash = 'transaction-hash';\n\n  it('should sign a transaction with a seed and index', async () => {\n    const signer = kadenaSignWithSeed(password, seed, index);\n    const signature = await signer(hash);\n    expect(signature).toBeTruthy();\n    expect(signature.sig.length > 0).toBeTruthy();\n  });\n});\n"]}