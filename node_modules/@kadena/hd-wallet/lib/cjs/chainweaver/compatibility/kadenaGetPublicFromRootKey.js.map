{"version":3,"file":"kadenaGetPublicFromRootKey.js","sourceRoot":"","sources":["../../../../src/chainweaver/compatibility/kadenaGetPublicFromRootKey.ts"],"names":[],"mappings":";;;AACA,6CAA+C;AAC/C,0DAAuD;AAEhD,KAAK,UAAU,0BAA0B,CAC9C,QAAgB,EAChB,OAAwB,EACxB,KAAa;IAEb,MAAM,SAAS,GAAG,MAAM,IAAA,wBAAa,EAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IACzD,MAAM,CAAC,EAAE,SAAS,CAAC,GAAG,MAAM,IAAA,mCAAgB,EAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IACzE,OAAO,SAAS,CAAC;AACnB,CAAC;AARD,gEAQC","sourcesContent":["import type { EncryptedString } from '../../index.js';\nimport { kadenaDecrypt } from '../../index.js';\nimport { kadenaGenKeypair } from '../kadena-crypto.js';\n\nexport async function kadenaGetPublicFromRootKey(\n  password: string,\n  rootKey: EncryptedString,\n  index: number,\n): Promise<Uint8Array> {\n  const decrypted = await kadenaDecrypt(password, rootKey);\n  const [, publicKey] = await kadenaGenKeypair(password, decrypted, index);\n  return publicKey;\n}\n"]}