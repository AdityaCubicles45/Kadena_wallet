{"version":3,"file":"kadenaSign.js","sourceRoot":"","sources":["../../../../src/chainweaver/compatibility/kadenaSign.ts"],"names":[],"mappings":";;;AACA,6CAA+C;AAC/C,0DAAuE;AAEhE,MAAM,UAAU,GAAG,KAAK,EAC7B,QAA6B,EAC7B,IAAY,EAAE,iBAAiB;AAC/B,SAAuC,EAClB,EAAE;IACvB,OAAO,MAAM,IAAA,6BAAkB,EAC7B,QAAQ,EACR,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,EAC3B,MAAM,IAAA,wBAAa,EAAC,QAAQ,EAAE,SAAS,CAAC,CACzC,CAAC;AACJ,CAAC,CAAC;AAVW,QAAA,UAAU,cAUrB","sourcesContent":["import type { EncryptedString } from '../../index.js';\nimport { kadenaDecrypt } from '../../index.js';\nimport { kadenaSign as originalKadenaSign } from '../kadena-crypto.js';\n\nexport const kadenaSign = async (\n  password: string | Uint8Array,\n  hash: string, // base64 message\n  secretKey: EncryptedString | Uint8Array,\n): Promise<Uint8Array> => {\n  return await originalKadenaSign(\n    password,\n    Buffer.from(hash, 'base64'),\n    await kadenaDecrypt(password, secretKey),\n  );\n};\n"]}